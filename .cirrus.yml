low_scale_task:

  compute_engine_instance:
    matrix:
      - image_project: fedora-cloud
        image: family/fedora-cloud-35
      - image_project: ubuntu-os-cloud
        image: family/ubuntu-2204-lts
    platform: linux
    memory: 8G
    disk: 20

  env:
    DEPENDENCIES: git ansible
    FEDORA_DEP: podman podman-docker ansible-collection-ansible-posix
    UBUNTU_DEP: docker.io
    PHYS_DEPLOYMENT: ${CIRRUS_WORKING_DIR}/physical-deployments/ci.yml

  runtime_cache:
    folder: runtime-cache

  configure_ssh_script:
    - mkdir -p /root/.ssh/
    - ssh-keygen -t rsa -N '' -q -f /root/.ssh/id_rsa
    - ssh-keyscan $(hostname) >> /root/.ssh/known_hosts
    - cat /root/.ssh/id_rsa.pub >> /root/.ssh/authorized_keys
    - chmod og-wx /root/.ssh/authorized_keys
    - ssh root@$(hostname) -v echo Hello

  install_dependencies_script:
    - 'if [ $(which dnf) ]; then
        dnf install -y ${DEPENDENCIES} ${FEDORA_DEP};
       fi'
    - 'if [ $(which apt) ]; then
        apt update && apt install -y ${DEPENDENCIES} ${UBUNTU_DEP};
       fi'

  unpack_caches_script:
    - mkdir -p runtime runtime-cache
    - docker load -i runtime-cache/ovn-multi-node.tar || true
    - tar -xzf runtime-cache/runtime.tar.gz || true

  install_script:
    - 'sed -i "s/<host>/$(hostname)/g" ${PHYS_DEPLOYMENT}'
    - ./do.sh install

  pack_caches_script:
    - rm -rf runtime-cache/*
    - docker save -o runtime-cache/ovn-multi-node.tar ovn/ovn-multi-node:latest
    - tar -czf runtime-cache/runtime.tar.gz runtime

  upload_caches:
    - runtime

  test_script:
    - 'sed -i "s/^  log_cmds\: False/  log_cmds\: True/"
        test-scenarios/ovn-low-scale.yml'
    - 'sed -i
        "/^cluster:/a \ \ cluster_cmd_path: $(pwd)/runtime/ovn-fake-multinode"
        test-scenarios/ovn-low-scale.yml'
    - ./do.sh run test-scenarios/ovn-low-scale.yml low-scale

  check_logs_script:
    - '! grep -B 30 -A 30 "Result: FAIL" ./test_results/*/test-log'
    - '! grep -B 30 -A 30 "Traceback" ./test_results/*/test-log'
    - '! grep "Failed to run test" ./test_results/*/test-log'
    - grep "Result: SUCCESS" ./test_results/*/test-log

  always:
    test_logs_artifacts:
      path: test_results/**
